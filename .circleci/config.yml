version: 2
jobs:
  build:
    machine: true
    environment:
      IMAGE_TAG: "ambientinnovation/nginx-demo:$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM"
    steps:
      - checkout

      # build the application image
      - run: docker build -t $IMAGE_TAG .

      # push the image
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $IMAGE_TAG

  deploy:
    machine: true
    environment:
      IMAGE_TAG: ambientinnovation/nginx-demo:$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM
    steps:
      - checkout
      - run: |
          # install kubectl
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

          # install az-cli
          sudo apt-get install apt-transport-https lsb-release software-properties-common dirmngr -y
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
          sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-key --keyring /etc/apt/trusted.gpg.d/Microsoft.gpg adv \
          --keyserver packages.microsoft.com \
          --recv-keys BC528686B50D79E339D3721CEB3E94ADBE1229CF
          sudo apt-get update
          sudo apt-get install azure-cli

          # login to azure and get kubeconfig
          az login -u $AZ_LOGIN -p $AZ_PASS
          az aks get-credentials --resource-group osram-training --name felix-test

          kubectl -n marius patch deployment nginx-deployment -p '{"spec":{"template":{"spec":{"containers":[{"name":"nginx","image":"$IMAGE_TAG"}]}}}}'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
